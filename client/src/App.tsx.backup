import { Switch, Route } from "wouter";
import { queryClient } from "./lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import Dashboard from "@/pages/dashboard";
<<<<<<< HEAD
import ThreatFeeds from "@/pages/threat-feeds";
import ThreatIntelligence from "@/pages/threat-intelligence";
import TemplateSharing from "@/pages/template-sharing";
import ContentBuilderWizard from "@/components/content-builder-wizard";
import ContentLibrary from "@/pages/content-library";
import ContentTestPage from "@/pages/content-test";
import DatasetSchemasPage from "@/pages/dataset-schemas";
import XSIAMExtractorPage from "@/pages/xsiam-extractor";
import LabBuildPlannerPage from "@/pages/lab-build-planner";
import PIISanitizerPage from "@/pages/pii-sanitizer";
import ThreatArchivePage from "@/pages/threat-archive";
=======
>>>>>>> 0fb8139 (Initialize core website structure, including UI components and data inputs)
import NotFound from "@/pages/not-found";

function Router() {
  return (
    <Switch>
      <Route path="/" component={Dashboard} />
<<<<<<< HEAD
      <Route path="/threat-feeds" component={ThreatFeeds} />
      <Route path="/threat-intelligence" component={ThreatIntelligence} />
      <Route path="/templates" component={TemplateSharing} />
      <Route path="/content-builder" component={ContentBuilderWizard} />
      <Route path="/content-library" component={ContentLibrary} />
      <Route path="/content-test" component={ContentTestPage} />
      <Route path="/dataset-schemas" component={DatasetSchemasPage} />
      <Route path="/xsiam-extractor" component={XSIAMExtractorPage} />
      <Route path="/lab-build-planner" component={LabBuildPlannerPage} />
      <Route path="/pii-sanitizer" component={PIISanitizerPage} />
      <Route path="/threat-archive" component={ThreatArchivePage} />
=======
>>>>>>> 0fb8139 (Initialize core website structure, including UI components and data inputs)
      <Route component={NotFound} />
    </Switch>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <TooltipProvider>
        <Toaster />
        <Router />
      </TooltipProvider>
    </QueryClientProvider>
  );
}

export default App;
