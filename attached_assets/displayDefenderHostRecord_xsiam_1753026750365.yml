commonfields:
  id: 7fa85494-507b-49c9-8b20-8c779750a4b3
  version: 21
vcShouldKeepItemLegacyProdMachine: false
name: displayDefenderHostRecord_xsiam
script: "# This is a helper script designed to be used with the \"[BETA] MSGraph Endpoint
  Alert Layout\". This populates a dynamic section of the layout with the most current
  host record,\n# as extracted from the Microsoft Defender for Endpoint integration,
  using the microsoft-atp-get-machine-details command\n\ndef json_to_html_table(json_string):\n
  \   import json\n\n    def format_value(value):\n        if isinstance(value, str):\n
  \           try:\n                value_dict = json.loads(value)\n                if
  isinstance(value_dict, dict):\n                    return \"<br>\".join([\"<b>{}</b>:
  {}\".format(k, v) for k, v in value_dict.items()])\n            except ValueError:\n
  \               pass\n        elif isinstance(value, dict):\n            return
  \"<br>\".join([\"<b>{}</b>: {}\".format(k, v) for k, v in value.items()])\n        return
  value\n\n    # Convert the JSON string to a dictionary\n    data = json.loads(json_string)\n\n
  \   # Initialize the HTML table with header row\n    html_table = \"<table style='border-collapse:
  collapse; width: 100%;'><tr style='background-color: #01cc66;'><td style='text-align:
  center; vertical-align: top; width: 20%;'>Field</td><td style='text-align: center;
  width: 80%;'>Value</td></tr>\"\n\n    # Populate table rows with data from the dictionary\n
  \   for key, value in data.items():\n        key_html = \"<span style='text-align:
  right; display: inline-block; font-weight: bold; vertical-align: top;'>{key}</span>\".format(key=key
  + \":  \") if key != \"Field\" else \"<span style='text-align: center; display:
  inline-block;'>{key}</span>\".format(key=key)\n        value_html = \"<span style='display:
  inline-block;'>{}</span>\".format(format_value(value))\n        html_table += \"<tr><td
  style='text-align: right; vertical-align: top;'>{}</td><td>{}</td></tr>\".format(key_html,
  value_html)\n\n    # Close the table tag\n    html_table += \"</table>\"\n\n    #
  Return the HTML table\n    return html_table\n\ndef main():\n    try:\n        context_data
  = demisto.alert()\n        agent_id = context_data['CustomFields']['agentid']\n
  \       host_context = execute_command('microsoft-atp-get-machine-details', {'machine_id':
  agent_id})\n        host_record = host_context[0]\n\n        #host_record = host_context['resources'][0]\n
  \       host_record_string = json.dumps(host_record)\n        html_record = json_to_html_table(host_record_string)\n
  \       return_results({\n            'ContentsFormat': EntryFormat.HTML,\n            'Type':
  EntryType.NOTE,\n            'Contents': html_record,\n        })\n\n    except
  Exception as e:\n        error_statement = \"\U0001F534 There has been an issue
  gathering host details. Please ensure the Microsoft Defender for Endpoint automation
  integration is enabled, and please verify that the displayDefenderHostDetails automation
  has been updated beyond placeholder status.\\n\"\n        error_statement += \"\\n\\n\\nException
  thrown: \" + str(e)\n        return_results(error_statement)\n\nif __name__ in (\"builtins\",
  \"__builtin__\", \"__main__\"):\n    main()"
type: python
tags:
- dynamic-section
enabled: true
scripttarget: 0
subtype: python3
pswd: ""
runonce: false
dockerimage: demisto/python3:3.12.8.1983910
runas: DBotWeakRole
engineinfo: {}
mainengineinfo: {}
