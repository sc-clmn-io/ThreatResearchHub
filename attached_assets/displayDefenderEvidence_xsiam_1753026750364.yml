commonfields:
  id: e887b465-9842-47df-8004-aa5b6b3b74aa
  version: 193
vcShouldKeepItemLegacyProdMachine: false
name: displayDefenderEvidence_xsiam
script: "# This is a helper script designed to be used with the \"[BETA] MSGraph Endpoint
  Alert Layout\". This populates a dynamic section of the layout with the full MS
  Graph alert record\n#\n\n\nregister_module_line('displayDefenderEvidence', 'start',
  __line__())\n\ndef json_array_to_html_table(json_array_string):\n    import json\n\n
  \   def format_value(value):\n        if isinstance(value, str):\n            try:\n
  \               value_dict = json.loads(value)\n                if isinstance(value_dict,
  dict):\n                    return \"<br>\".join([\"<b>{}</b>: {}\".format(k, v)
  for k, v in value_dict.items()])\n            except ValueError:\n                pass\n
  \       elif isinstance(value, dict):\n            return \"<br>\".join([\"<b>{}</b>:
  {}\".format(k, v) for k, v in value.items()])\n        return value\n\n    # Convert
  the JSON array string to a list of dictionaries\n    data = json.loads(json_array_string)\n\n
  \   # Initialize the final HTML string\n    html_tables = \"\"\n\n    # Process
  each dictionary in the JSON array\n    for dictionary in data:\n        # Start
  building a new HTML table for each dictionary\n        html_table = \"<table style='border-collapse:
  collapse; width: 100%;'>\"\n\n        # Populate table rows with data from the current
  dictionary\n        for key, value in dictionary.items():\n            # format
  html\n            row_style = \"background-color: #01cc66; font-size: 120%;\" if
  key == \"@odata.type\" else \"\"\n            key_html = \"<span style='text-align:
  right; display: inline-block;'>{key}:</span>\".format(key=key)\n\n            #
  Check if the value is a JSON string or JSON object\n            value_html = format_value(value)
  if key != \"@odata.type\" else value\n\n            html_table += \"<tr style='{}'><td
  style='text-align: right; width: 20%;'>{}</td><td style='width: 80%;'>{}</td></tr>\".format(row_style,
  key_html, value_html)\n\n        # Close the current table tag\n        html_table
  += \"</table>\"\n\n        # Append the current table to the final HTML string with
  a line break\n        html_tables += html_table + \"<br>\"\n\n    # Return the final
  HTML string containing all tables\n    return html_tables\n\ndef main():\n\n    #
  Fetch data from context\n    try:\n        context_data = demisto.alert()\n        context_data
  = context_data['CustomFields']['microsoftgraphsecurityalertevidence']\n        table
  = json_array_to_html_table(context_data)\n\n        return_results({\n            'ContentsFormat':
  EntryFormat.HTML,\n            'Type': EntryType.NOTE,\n            'Contents':
  table,\n        })\n    except Exception as e:\n        error_statement = \"\U0001F534
  There seems to be an issue rendering this field.\\n\\nContents of this are controlled
  by the Script 'displayDefenderEvidence_xsiam' which can be located under Investigation
  & Response -> Automation -> Scripts.\\nThis script pulls data from the *microsoftgraphsecurityalertevidence
  key in the alert/issue context - if that key is improperly populated, or missing,
  nothing will be displayed here. Please review the correlation rule, alert mapping,
  and MS Graph Alert dataset. \"\n        error_statement += \"\\n\\nException thrown
  by script: \" + str(e)\n        return_results(error_statement)\n\nif __name__ in
  (\"builtins\", \"__builtin__\", \"__main__\"):\n    main()\n\nregister_module_line('displayDefenderEvidence',
  'end', __line__())"
type: python
tags:
- dynamic-section
enabled: true
scripttarget: 0
subtype: python3
pswd: ""
runonce: false
dockerimage: demisto/python3:3.12.8.1983910
runas: DBotWeakRole
engineinfo: {}
mainengineinfo: {}
